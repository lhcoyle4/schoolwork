|ps2
CLOCK_50 => CLOCK_50.IN2
PS2_CLK => ASCIIData[0].CLK
PS2_CLK => ASCIIData[1].CLK
PS2_CLK => ASCIIData[2].CLK
PS2_CLK => ASCIIData[3].CLK
PS2_CLK => ASCIIData[4].CLK
PS2_CLK => ASCIIData[5].CLK
PS2_CLK => ASCIIData[6].CLK
PS2_CLK => ASCIIData[7].CLK
PS2_CLK => PS2Data[0].CLK
PS2_CLK => PS2Data[1].CLK
PS2_CLK => PS2Data[2].CLK
PS2_CLK => PS2Data[3].CLK
PS2_CLK => PS2Data[4].CLK
PS2_CLK => PS2Data[5].CLK
PS2_CLK => PS2Data[6].CLK
PS2_CLK => PS2Data[7].CLK
PS2_CLK => PS2Data[8].CLK
PS2_CLK => PS2Data[9].CLK
PS2_CLK => PS2Data[10].CLK
PS2_CLK => PS2Data[11].CLK
PS2_CLK => PS2Data[12].CLK
PS2_CLK => PS2Data[13].CLK
PS2_CLK => PS2Data[14].CLK
PS2_CLK => PS2Data[15].CLK
PS2_CLK => writeData.CLK
PS2_CLK => count[0].CLK
PS2_CLK => count[1].CLK
PS2_CLK => count[2].CLK
PS2_CLK => count[3].CLK
PS2_CLK => shiftOn.CLK
PS2_CLK => start.CLK
PS2_CLK => GPIO_1[1].DATAIN
PS2_DAT => PS2Data.DATAB
PS2_DAT => GPIO_1[0].DATAIN
PS2_DAT => always0.IN1
LCD_ON <= lcd:lcd16x2.port1
LCD_BLON <= lcd:lcd16x2.port2
LCD_EN <= lcd:lcd16x2.port3
LCD_RS <= lcd:lcd16x2.port4
LCD_DATA[0] <= lcd:lcd16x2.port5
LCD_DATA[1] <= lcd:lcd16x2.port5
LCD_DATA[2] <= lcd:lcd16x2.port5
LCD_DATA[3] <= lcd:lcd16x2.port5
LCD_DATA[4] <= lcd:lcd16x2.port5
LCD_DATA[5] <= lcd:lcd16x2.port5
LCD_DATA[6] <= lcd:lcd16x2.port5
LCD_DATA[7] <= lcd:lcd16x2.port5
LCD_RW <= lcd:lcd16x2.port6
HEX0[0] <= segdriver:make0.port1
HEX0[1] <= segdriver:make0.port1
HEX0[2] <= segdriver:make0.port1
HEX0[3] <= segdriver:make0.port1
HEX0[4] <= segdriver:make0.port1
HEX0[5] <= segdriver:make0.port1
HEX0[6] <= segdriver:make0.port1
HEX1[0] <= segdriver:make1.port1
HEX1[1] <= segdriver:make1.port1
HEX1[2] <= segdriver:make1.port1
HEX1[3] <= segdriver:make1.port1
HEX1[4] <= segdriver:make1.port1
HEX1[5] <= segdriver:make1.port1
HEX1[6] <= segdriver:make1.port1
HEX4[0] <= segdriver:ascii0.port1
HEX4[1] <= segdriver:ascii0.port1
HEX4[2] <= segdriver:ascii0.port1
HEX4[3] <= segdriver:ascii0.port1
HEX4[4] <= segdriver:ascii0.port1
HEX4[5] <= segdriver:ascii0.port1
HEX4[6] <= segdriver:ascii0.port1
HEX5[0] <= segdriver:ascii1.port1
HEX5[1] <= segdriver:ascii1.port1
HEX5[2] <= segdriver:ascii1.port1
HEX5[3] <= segdriver:ascii1.port1
HEX5[4] <= segdriver:ascii1.port1
HEX5[5] <= segdriver:ascii1.port1
HEX5[6] <= segdriver:ascii1.port1
GPIO_1[0] <= PS2_DAT.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[1] <= PS2_CLK.DB_MAX_OUTPUT_PORT_TYPE
LEDR[0] <= shiftOn.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= <GND>
KEY[0] => KEY[0].IN1
KEY[1] => KEY[1].IN1


|ps2|segdriver:make0
decimal_in[0] => Decoder0.IN3
decimal_in[1] => Decoder0.IN2
decimal_in[2] => Decoder0.IN1
decimal_in[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|ps2|segdriver:make1
decimal_in[0] => Decoder0.IN3
decimal_in[1] => Decoder0.IN2
decimal_in[2] => Decoder0.IN1
decimal_in[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|ps2|segdriver:ascii0
decimal_in[0] => Decoder0.IN3
decimal_in[1] => Decoder0.IN2
decimal_in[2] => Decoder0.IN1
decimal_in[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|ps2|segdriver:ascii1
decimal_in[0] => Decoder0.IN3
decimal_in[1] => Decoder0.IN2
decimal_in[2] => Decoder0.IN1
decimal_in[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|ps2|ps2_power_on_reset_delay:por_d
inClock => outResetNeg~reg0.CLK
inClock => Counter[0].CLK
inClock => Counter[1].CLK
inClock => Counter[2].CLK
inClock => Counter[3].CLK
inClock => Counter[4].CLK
inClock => Counter[5].CLK
inClock => Counter[6].CLK
inClock => Counter[7].CLK
inClock => Counter[8].CLK
inClock => Counter[9].CLK
inClock => Counter[10].CLK
inClock => Counter[11].CLK
inClock => Counter[12].CLK
inClock => Counter[13].CLK
inClock => Counter[14].CLK
inClock => Counter[15].CLK
inClock => Counter[16].CLK
inClock => Counter[17].CLK
inClock => Counter[18].CLK
inClock => Counter[19].CLK
inClock => Counter[20].CLK
inClock => Counter[21].CLK
inClock => Counter[22].CLK
inClock => Counter[23].CLK
outResetNeg <= outResetNeg~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ps2|lcd:lcd16x2
CLOCK_50 => CLOCK_50.IN2
LCD_ON <= <VCC>
LCD_BLON <= <VCC>
LCD_EN <= message_write:msg_w.LCD_EN
LCD_RS <= message_write:msg_w.LCD_RS
LCD_DATA[0] <= message_write:msg_w.LCD_DATA
LCD_DATA[1] <= message_write:msg_w.LCD_DATA
LCD_DATA[2] <= message_write:msg_w.LCD_DATA
LCD_DATA[3] <= message_write:msg_w.LCD_DATA
LCD_DATA[4] <= message_write:msg_w.LCD_DATA
LCD_DATA[5] <= message_write:msg_w.LCD_DATA
LCD_DATA[6] <= message_write:msg_w.LCD_DATA
LCD_DATA[7] <= message_write:msg_w.LCD_DATA
LCD_RW <= message_write:msg_w.LCD_RW
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
ASCIIData[0] => ASCIIData[0].IN1
ASCIIData[1] => ASCIIData[1].IN1
ASCIIData[2] => ASCIIData[2].IN1
ASCIIData[3] => ASCIIData[3].IN1
ASCIIData[4] => ASCIIData[4].IN1
ASCIIData[5] => ASCIIData[5].IN1
ASCIIData[6] => ASCIIData[6].IN1
ASCIIData[7] => ASCIIData[7].IN1
writeData => writeData.IN1


|ps2|lcd:lcd16x2|power_on_reset_delay:por_d
inClock => outResetNeg~reg0.CLK
inClock => Counter[0].CLK
inClock => Counter[1].CLK
inClock => Counter[2].CLK
inClock => Counter[3].CLK
inClock => Counter[4].CLK
inClock => Counter[5].CLK
inClock => Counter[6].CLK
inClock => Counter[7].CLK
inClock => Counter[8].CLK
inClock => Counter[9].CLK
inClock => Counter[10].CLK
inClock => Counter[11].CLK
inClock => Counter[12].CLK
inClock => Counter[13].CLK
inClock => Counter[14].CLK
inClock => Counter[15].CLK
inClock => Counter[16].CLK
inClock => Counter[17].CLK
inClock => Counter[18].CLK
inClock => Counter[19].CLK
outResetNeg <= outResetNeg~reg0.DB_MAX_OUTPUT_PORT_TYPE
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT
inReset => Counter.OUTPUTSELECT


|ps2|lcd:lcd16x2|message_write:msg_w
inClock => inClock.IN1
inResetNeg => inResetNeg.IN1
inASCIIData[0] => LessThan0.IN16
inASCIIData[0] => LessThan1.IN16
inASCIIData[0] => myLCD_DATA.DATAB
inASCIIData[0] => LessThan5.IN16
inASCIIData[0] => Decoder0.IN7
inASCIIData[0] => Equal0.IN6
inASCIIData[1] => LessThan0.IN15
inASCIIData[1] => LessThan1.IN15
inASCIIData[1] => myLCD_DATA.DATAB
inASCIIData[1] => LessThan5.IN15
inASCIIData[1] => Decoder0.IN6
inASCIIData[1] => Equal0.IN5
inASCIIData[2] => LessThan0.IN14
inASCIIData[2] => LessThan1.IN14
inASCIIData[2] => myLCD_DATA.DATAB
inASCIIData[2] => LessThan5.IN14
inASCIIData[2] => Decoder0.IN5
inASCIIData[2] => Equal0.IN4
inASCIIData[3] => LessThan0.IN13
inASCIIData[3] => LessThan1.IN13
inASCIIData[3] => myLCD_DATA.DATAB
inASCIIData[3] => LessThan5.IN13
inASCIIData[3] => Decoder0.IN4
inASCIIData[3] => Equal0.IN3
inASCIIData[4] => LessThan0.IN12
inASCIIData[4] => LessThan1.IN12
inASCIIData[4] => myLCD_DATA.DATAB
inASCIIData[4] => LessThan5.IN12
inASCIIData[4] => Decoder0.IN3
inASCIIData[4] => Equal0.IN2
inASCIIData[5] => LessThan0.IN11
inASCIIData[5] => LessThan1.IN11
inASCIIData[5] => myLCD_DATA.DATAB
inASCIIData[5] => LessThan5.IN11
inASCIIData[5] => Decoder0.IN2
inASCIIData[5] => Equal0.IN1
inASCIIData[6] => LessThan0.IN10
inASCIIData[6] => LessThan1.IN10
inASCIIData[6] => myLCD_DATA.DATAB
inASCIIData[6] => LessThan5.IN10
inASCIIData[6] => Decoder0.IN1
inASCIIData[6] => Equal0.IN0
inASCIIData[7] => LessThan0.IN9
inASCIIData[7] => LessThan1.IN9
inASCIIData[7] => myLCD_DATA.DATAB
inASCIIData[7] => LessThan5.IN9
inASCIIData[7] => Decoder0.IN0
inASCIIData[7] => Equal0.IN7
inWriteData => always0.IN1
inWriteData => prevWriteData.DATAIN
LCD_DATA[0] <= lcd_driver:lcd_d.LCD_DATA
LCD_DATA[1] <= lcd_driver:lcd_d.LCD_DATA
LCD_DATA[2] <= lcd_driver:lcd_d.LCD_DATA
LCD_DATA[3] <= lcd_driver:lcd_d.LCD_DATA
LCD_DATA[4] <= lcd_driver:lcd_d.LCD_DATA
LCD_DATA[5] <= lcd_driver:lcd_d.LCD_DATA
LCD_DATA[6] <= lcd_driver:lcd_d.LCD_DATA
LCD_DATA[7] <= lcd_driver:lcd_d.LCD_DATA
LCD_EN <= lcd_driver:lcd_d.LCD_EN
LCD_RS <= lcd_driver:lcd_d.LCD_RS
LCD_RW <= lcd_driver:lcd_d.LCD_RW


|ps2|lcd:lcd16x2|message_write:msg_w|lcd_driver:lcd_d
inClock => Start.CLK
inClock => prevStart.CLK
inClock => Counter[0].CLK
inClock => Counter[1].CLK
inClock => Counter[2].CLK
inClock => Counter[3].CLK
inClock => Counter[4].CLK
inClock => LCD_EN~reg0.CLK
inClock => outDone~reg0.CLK
inClock => state~5.DATAIN
inResetNeg => Start.ACLR
inResetNeg => prevStart.ACLR
inResetNeg => Counter[0].ACLR
inResetNeg => Counter[1].ACLR
inResetNeg => Counter[2].ACLR
inResetNeg => Counter[3].ACLR
inResetNeg => Counter[4].ACLR
inResetNeg => LCD_EN~reg0.ACLR
inResetNeg => outDone~reg0.ACLR
inResetNeg => state~7.DATAIN
inRS => LCD_RS.DATAIN
inStart => always0.IN1
inStart => prevStart.DATAIN
inData[0] => LCD_DATA[0].DATAIN
inData[1] => LCD_DATA[1].DATAIN
inData[2] => LCD_DATA[2].DATAIN
inData[3] => LCD_DATA[3].DATAIN
inData[4] => LCD_DATA[4].DATAIN
inData[5] => LCD_DATA[5].DATAIN
inData[6] => LCD_DATA[6].DATAIN
inData[7] => LCD_DATA[7].DATAIN
outDone <= outDone~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_EN <= LCD_EN~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RS <= inRS.DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= <GND>
LCD_DATA[0] <= inData[0].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[1] <= inData[1].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[2] <= inData[2].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[3] <= inData[3].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[4] <= inData[4].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[5] <= inData[5].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[6] <= inData[6].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[7] <= inData[7].DB_MAX_OUTPUT_PORT_TYPE


