TI ARM Assembler PC v5.1.1 Wed Dec 03 21:42:00 2014

Tools Copyright (c) 1996-2013 Texas Instruments Incorporated
../strcpy_arm16.asm                                                  PAGE    1

       1                    ; Louis Coyle II
       2                    ; Email: lhcoyle4@gmail.com
       3                    ; DigiPen login: louis.coyleii
       4                    ; Course: ECE399
       5                    ; Assignment: 6 - arm16 strcpy
       6                    ; Date: 11/25/14
       7                    
       8 00000000             .text
       9 00000000             .state16
      10                    
      11 00000000 2000        MOV r0, #0   ; source address
      12 00000002 210A        MOV r1, #10  ; dest address
      13 00000004 2200        MOV r2, #0   ; to store each word of the string
      14 00000006 2300        MOV r3, #0   ; to save each word during byte testing
      15 00000008 2600        MOV r6, #0   ; to count the number of words copied
      16 0000000a 2700        MOV r7, #0   ; number of bits to rotate word by
      17                    
      18 0000000c           copy:
      19                    
      20 0000000c 24FF        MOV r4, #255  ; initialize register to and words with to get bytes
      21 0000000e 2500        MOV r5, #0    ; and register to count number of bytes checked
      22                    
      23 00000010 6802        LDR r2, [r0]    ; load and store 1 word
      24 00000012 600A        STR r2, [r1]
      25                    
      26 00000014 3004        ADD r0, #4    ; increment source and dest addresses to next word
      27 00000016 3104        ADD r1, #4
      28 00000018 3601        ADD r6, #1    ; increment the number of words copied
      29                    
      30 0000001a           checknull:
      31                    
      32 0000001a 1C13        MOV r3, r2  ; save loaded value
      33 0000001c 41FB        ROR r3, r7  ; rotate the word to check the next byte for null terminator
      34                    
      35 0000001e 4023        AND r3, r4  ; select the rightmost byte
      36                    
      37 00000020 2B00        CMP r3, #0  ; check if it is the null terminator
      38 00000022 D004        BEQ verify  ; if so, end program
      39                    
      40 00000024 3708        ADD r7, #8
      41 00000026 3501        ADD r5, #1  ; increment the counter for number of bytes checked
      42                    
      43 00000028 2D04        CMP r5, #4  ; if all bytes have been checked and there is no null
      44 0000002a D0EF        BEQ copy    ; then return to the start of the program (after initialization)
      45 0000002c E7F5        B checknull
      46                    
      47 0000002e           verify:
      48 0000002e 6802        LDR r2, [r0]  ; load r2 with the source word
      49 00000030 680B        LDR r3, [r1]  ; and r3 with the dest word
      50                    
      51 00000032 3804        SUB r0, #4  ; decrement source and dest addresses to previous word
      52 00000034 3904        SUB r1, #4  ; they are at the last word because of previous instructions
      53                    
      54 00000036 3E01        SUB r6, #1  ; decrement the number of words that have been copied
      55                    
TI ARM Assembler PC v5.1.1 Wed Dec 03 21:42:00 2014

Tools Copyright (c) 1996-2013 Texas Instruments Incorporated
../strcpy_arm16.asm                                                  PAGE    2

      56 00000038 429A        CMP r2, r3  ; cmp the two
      57 0000003a D102        BNE fail    ; if they are not equivalent, the strcpy failed
      58 0000003c 2E00        CMP r6, #0  ; if there are no words left to copy, and strcpy didnt fail
      59 0000003e D001        BEQ success ; then report a success
      60 00000040 E7F5        B verify    ; otherwise there are still words to check
      61                    
      62                    
      63 00000042           fail:
      64 00000042 2001        MOV r0, #1 ; 1 is exit failure
      65                    
      66 00000044           success:
      67 00000044 2000        MOV r0, #0  ; 0 is exit success

No Assembly Errors, No Assembly Warnings
